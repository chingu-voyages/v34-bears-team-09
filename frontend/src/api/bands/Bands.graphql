scalar Date

type Band {
  _id: ID!
  name: String!
  description: String!
  location: String!
  foundation_date: Date
  images: [Image]
  videos: [Video]
  genres: [Genre]
  members: [User]
}

type Image {
  _id: ID!
  name: String
  url: String
}

type Video {
  _id: ID!
  title: String
  url: String
}

type Genre {
  _id: ID!
  name: String
}

type Instrument {
  _id: ID!
  name: String
}

type User {
  _id: ID!
  name: String
  username: String
  email: String
  image: [Image]
  birthday: Date
  address: String
  instruments: [Instrument]
}

input BandInput {
  _id: ID
  name: String!
  description: String
  location: String
  foundation_date: Date
  image: String
  videos: String
  genres: String
  members: [User]
}

type Mutation {
  addBand(band: BandInput): Band
  addImage(BandId: ID): Band
  addVideo(BandId: ID): Band
  addMember(BandId: ID): Band
}

type Query {
  bands: [Band]
}
